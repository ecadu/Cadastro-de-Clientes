

services:
  db:
    image: postgres:15
    container_name: postgres_container
    restart: always
    environment:
      POSTGRES_DB: desafioclients
      POSTGRES_USER: ADMIN
      POSTGRES_PASSWORD: ADMIN
      
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ADMIN -d desafioclients"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s  # Aguarda um pouco mais para evitar falsos negativos

  backend:
    build: ./DesafioClients
    container_name: backend_container
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/desafioclients
      SPRING_DATASOURCE_USERNAME: ADMIN
      SPRING_DATASOURCE_PASSWORD: ADMIN
    
    ports:
      - "8080:8080"
    healthcheck:
      
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 19s  

  frontend:
    build: ./desafiofront
    container_name: frontend_container
    ports:
      - "3000:3000"

 

volumes:
  postgres_data:
